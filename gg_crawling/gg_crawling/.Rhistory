# -------------------------------
# -- 한글 처리를 위한 패키지 설치
# -------------------------------
library(rJava)                                                       # 아래와 같은 Error 발생 시 Sys.setenv()함수로 java 경로 지정
library(KoNLP)                                                    # rJava 라이브러리가 필요함
# -------------------------------
# -- 한글 처리를 위한 패키지 설치
# -------------------------------
library(rJava)
library(KoNLP)                                                    # rJava 라이브러리가 필요함
marketing = file("marketing.txt", encoding="UTF-8")
marketing2 = readLines(marketing)                                    # 줄 단위 데이터 생성
close(marketing)
head(marketing2)                                                     # 앞부분 6줄 보기 - 줄 단위 문장 확인
# -- Map()함수 이용 줄 단위 단어 추출 : Map(f, ...) -> base)
lword = Map(extractNoun, marketing2)
length(lword)                                                        # [1] 472
lword = unique(lword)                                                # 중복제거1(전체 대상)
length(lword)                                                        # [1] 353(19개 제거)
lword = sapply(lword, unique)                                        # 중복제거2(줄 단위 대상)
length(lword)                                                        # [1] 352(1개 제거)
lword = sapply(lword, unique)                                        # 중복제거2(줄 단위 대상)
length(lword)                                                        # [1] 352(1개 제거)
str(lword)                                                           # List of 353
lword                                                                # 추출 단어 확인
# -- 1) 길이가 2~4 사이의 단어 필터링 함수 정의
filter1 = function(x){
nchar(x) <= 4 && nchar(x) >= 2 && is.hangul(x)
}
# -- 2) Filter(f,x) -> filter1() 함수를 적용하여 x 벡터 단위 필터링
filter2 = function(x){
Filter(filter1, x)
}
# -- 3) 줄 단어 대상 필터링
lword = sapply(lword, filter2)
lword                                                                # 추출 단어 확인(길이 1개 단어 삭제됨)
# -- arules 패키지 설치
install.packages("arules")
library(arules)
wordtran = as(lword, "transactions")                                 # lword에 중복데이터가 있으면 error발생
wordtran
wordtable = crossTable(wordtran)                                     # 교차표 작성
wordtable
View(wordtable)
# -- (1) 연관단어 시각화를 위해서 데이터 구조 변경
rules = labels(tranrules, ruleSep=" ")
inspect(tranrules)                                                 # 연관규칙 생성 결과(59개) 보기
tranrules = apriori(wordtran, parameter=list(supp=0.25, conf=0.05))
inspect(tranrules)                                                 # 연관규칙 생성 결과(59개) 보기
# -- (1) 연관단어 시각화를 위해서 데이터 구조 변경
rules = labels(tranrules, ruleSep=" ")
class(rules)                                                         # [1] "character"
rules = sapply(rules, strsplit, " ",  USE.NAMES=F)
rulemat = do.call("rbind", rules)                                    # sapply(), do.call() # base 패키지
rulemat
class(rulemat)                                                       # [1] "matrix"
# -- (2) 연관어 시각화를 위한 igraph 패키지 설치
install.packages("igraph") # graph.edgelist(), plot.igraph(), closeness() 함수 제공
library(igraph)
# -- (3) edgelist보기 - 연관단어를 정점 형태의 목록 제공
ruleg = graph.edgelist(rulemat[c(12:59),], directed=F)               # [1,]~[11,] "{}" 제외
ruleg
# -- (4) edgelist 시각화
plot.igraph(ruleg, vertex.label=V(ruleg)$name,
vertex.label.cex=1.2, vertex.label.color='black',
vertex.size=20, vertex.color='green', vertex.frame.color='blue')
# -- (4) edgelist 시각화
plot.igraph(ruleg, vertex.label=V(ruleg)$name,
vertex.label.cex=1.2, vertex.label.color='black',
vertex.size=20, vertex.color='green', vertex.frame.color='blue', family = 'AppleGothic')
library(extrafont)
font_import(pattern = 'Apple')
font_import(pattern = 'Apple');
# -- (4) edgelist 시각화
plot.igraph(ruleg, vertex.label=V(ruleg)$name,
vertex.label.cex=1.2, vertex.label.color='black',
vertex.size=20, vertex.color='green', vertex.frame.color='blue', family = 'AppleGothic')
# -- (4) edgelist 시각화
plot.igraph(ruleg, vertex.label=V(ruleg)$name,
vertex.label.cex=1.2, vertex.label.color='black',
vertex.size=20, vertex.color='green', vertex.frame.color='blue', family = 'AppleGothic')
# -- (4) edgelist 시각화
plot.igraph(ruleg, vertex.label=V(ruleg)$name,
vertex.label.cex=1.2, vertex.label.color='black',
vertex.size=20, vertex.color='green', vertex.frame.color='blue',family = 'AppleGothic')
# -- (4) edgelist 시각화
plot.igraph(ruleg, vertex.label=V(ruleg)$name,
vertex.label.cex=1.2, vertex.label.color='black',
vertex.size=20, vertex.color='green', vertex.frame.color='blue',family = 'AppleGothic')
# -- (4) edgelist 시각화
plot.igraph(ruleg, vertex.label=V(ruleg)$name,
vertex.label.cex=1.2, vertex.label.color='black',
vertex.size=20, vertex.color='green', vertex.frame.color='blue', label.family = 'AppleGothic')
#
# -- 7.단어 근접중심성(closeness centrality) 파악
#
closen = closeness(ruleg)                                            # edgelist 대상 단어 근접중심성 생성
#closen = closen[c(2:8)]                                             # {} 항목제거
closen = closen[c(1:10)]                                             # 상위 1~10 단어 근접중심성 보기
plot(closen, col="red",xaxt="n", lty="solid", type="b", xlab="단어", ylab="closeness")
plot(closen, col="red",xaxt="n", lty="solid", type="b", xlab="단어", ylab="closeness", label.family = 'AppleGothic')
plot(closen, col="red",xaxt="n", lty="solid", type="b", xlab="단어", ylab="closeness", family = 'AppleGothic')
points(closen, pch=16, col="navy")
axis(1, seq(1, length(closen)), V(ruleg)$name[c(1:10)], cex=5)       # 중심성 : 노드(node)의 상대적 중요성을 나타내는 척도이다.
axis(1, seq(1, length(closen)), V(ruleg)$name[c(1:10)], cex=5, family = 'AppleGothic')       # 중심성 : 노드(node)의 상대적 중요성을 나타내는 척도이다.
plot(closen, col="red",xaxt="n", lty="solid", type="b", xlab="단어", ylab="closeness", family = 'AppleGothic')
points(closen, pch=16, col="navy")
axis(1, seq(1, length(closen)), V(ruleg)$name[c(1:10)], cex=5, family = 'AppleGothic')       # 중심성 : 노드(node)의 상대적 중요성을 나타내는 척도이다.
install.packages('RSelenium')
remDr <- remoteDriver(remoteServerAddr = "localhost"
, port = 4444
, browserName = "Chrome"
)
library(RSelenium)
remDr <- remoteDriver(remoteServerAddr = "localhost"
, port = 4444
, browserName = "Chrome"
)
remDr$open()
remDr$navigate("http://www.kyeonggi.com/")
dr <- remoteDriver(remoteServerAddr = "localhost"
, port = 4444
, browserName = "Chrome"
)
dr$open()
dr$navigate("http://www.kyeonggi.com/")
dr <- remoteDriver(remoteServerAddr = "localhost"
, port = 4444
, browserName = "Chrome"
)
dr$open()
dr$navigate("http://www.kyeonggi.com/")
dr$close
dr$close
require(RSelenium)
require(RSelenium)
require(RSelenium)
dr <- remoteDriver(remoteServerAddr = "localhost"
, port = 4444
, browserName = "Chrome"
)
dr$open()
dr$navigate("http://www.kyeonggi.com/")
# dr$findElement('xpath', '//*[@id="n_search_input"]')
dr$close
dr$close
dr$open()
dr$navigate("http://www.kyeonggi.com/")
# dr$findElement('xpath', '//*[@id="n_search_input"]')
dr$findElement('xpath','//*[@id="container"]/div/div/a[1]')
dr$findElement('xpath', '//*[@id="n_search_input"]')
dr$findElement('xpath', '//*[@id="n_search_input"]')$sendKeysToElement('건축법')
dr$findElement('xpath', '//*[@id="n_search_input"]')$sendKeysToElement(list('건축법'))
dr$findElement('xpath', '//*[@id="n_search_input"]')$sendKeysToElement(list('건축법',key = 'enter'))
dr$navigate("http://www.kyeonggi.com/")
dr$findElement('xpath', '//*[@id="n_search_input"]')$sendKeysToElement(list('건축법',key = 'enter'))
dr$findElement('//*[@id="content"]/div[2]/div[2]/div[2]/div[1]/ul/li[1]/a]')$sendKeysToElement(list(key = 'enter'))
dr$findElement('xpath','//*[@id="content"]/div[2]/div[2]/div[2]/div[1]/ul/li[1]/a]')$sendKeysToElement(list(key = 'enter'))
dr$findElement('xpath','//*[@id="content"]/div[2]/div[2]/div[2]/div[1]/ul/li[1]/a')$sendKeysToElement(list(key = 'enter'))
require(RSelenium)
dr <- remoteDriver(remoteServerAddr = "localhost"
, port = 4444
, browserName = "Chrome"
)
dr$open()
dr <- remoteDriver(remoteServerAddr = "localhost"
, port = 4444
, browserName = "Chrome"
)
dr$open()
dr$navigate("http://www.kyeonggi.com/")
dr$findElement('xpath', '//*[@id="n_search_input"]')$sendKeysToElement(list('건축법',key = 'enter'))
dr$findElement('xpath','//*[@id="content"]/div[2]/div[2]/div[2]/div[1]/ul/li[1]/a')$sendKeysToElement(list(key = 'enter'))
gisa<- dr$findElement(using = 'tag', value = "p")
# sudo ln -f -s $(/usr/libexec/java_home)/jre/lib/server/libjvm.dylib /usr/local/lib
# rJava 오류시
# java -jar selenium-server-standalone-3.8.1.jar
# Rselenium server 구동 cmd 명령문
install.packages('rvest')
# sudo ln -f -s $(/usr/libexec/java_home)/jre/lib/server/libjvm.dylib /usr/local/lib
# rJava 오류시
# java -jar selenium-server-standalone-3.8.1.jar
# Rselenium server 구동 cmd 명령문
require(rvest)
pg<- dr$getPageSource
pg<- dr$getPageSource()
View(pg)
pg[[1]]
# sudo ln -f -s $(/usr/libexec/java_home)/jre/lib/server/libjvm.dylib /usr/local/lib
# rJava 오류시
# java -jar selenium-server-standalone-3.8.1.jar
# Rselenium server 구동 cmd 명령문
require(rvest)
gisa<- html_nodes(pg[[1]], "p")
gisa<- read_html(pg[[1]], "p")
gisa<- read_html(pg[[1]])
gisa
ps<- read_html(pg[[1]])
gisa<-html_nodes(ps, "p")
gisa
View(gisa)
html_text(gisa)
View(ps)
gisa<-html_nodes(ps, "#arl_view_content > p:nth-child(2)")
gisa
gisa<-html_nodes(ps, '//*[@id="arl_view_content"]/p[1]')
gisa<-html_nodes(ps, 'p')
gisa
html_text(gisa)
?dr$switchToWindow
?switchToWindow
currWin <- dr$getCurrentWindowHandle()
currWin
allWins <- unlist(dr$getWindowHandles())
allWins
otherWindow <- allWins[!allWins %in% currWin[[1]]]
dr$switchToWindow(otherWindow)
pg<- dr$getPageSource()
ps<- read_html(pg[[1]])
gisa<-html_nodes(ps, 'p')
gisa
html_text(gisa[[1]])
newses<-dr$findElements('xpath','//*[@id="content"]/div[2]/div[2]/div[2]/div[1]/ul/li[1]/a')
newses
dr$switchToWindow(currWin)
dr$switchToWindow(currWin[[1]])
newses<-dr$findElements('xpath','//*[@id="content"]/div[2]/div[2]/div[2]/div[1]/ul/li[1]/a')
newses
dr$findElement('xpath',paste0('//*[@id="content"]/div[2]/div[2]/div[2]/div[',as.character(2),']/ul/li[1]/a'))$sendKeysToElement(list(key = 'enter'))
dr$closeWindow
dr$closeWindow()
dr$navigate("http://www.kyeonggi.com/")
dr$navigate("http://www.kyeonggi.com/")
dr$open()
dr$navigate("http://www.kyeonggi.com/")
dr$findElement('xpath', '//*[@id="n_search_input"]')$sendKeysToElement(list('건축법',key = 'enter'))
dr$findElement('xpath',paste0('//*[@id="content"]/div[2]/div[2]/div[2]/div[',as.character(2),']/ul/li[1]/a'))$sendKeysToElement(list(key = 'enter'))
currWin <- dr$getCurrentWindowHandle()
currWin
allWins <- unlist(dr$getWindowHandles())
allWins
otherWindow <- allWins[!allWins %in% currWin[[1]]]
dr$switchToWindow(otherWindow)
pg<- dr$getPageSource()
pg[[1]]
ps<- read_html(pg[[1]])
gisa<-html_nodes(ps, 'p')
gisa
gisa<-html_nodes(ps, 'div')
gisa
View(gisa)
gisa<-html_nodes(ps, 'div#__ad_right__.not_print')
gisa
cont<- html_text(gisa[[1]])
cont
gisa<-html_nodes(ps, 'arl_view_content')
gisa
gisa<-html_nodes(ps, '#arl_view_content')
gisa
cont<- html_text(gisa[[1]])
cont
dr$close()
dr$open()
dr$navigate("http://www.kyeonggi.com/")
dr$closeWindow
dr$closeWindow()
dr$navigate("http://www.kyeonggi.com/")
dr$closeWindow()
dr$close
dr$close()
dr$open()
dr$navigate("http://www.kyeonggi.com/")
currWin <- dr$getCurrentWindowHandle()
currWin
allWins <- unlist(dr$getWindowHandles())
allWins
otherWindow <- allWins[!allWins %in% currWin[[1]]]
dr$switchToWindow(otherWindow)
dr$closeWindow()
dr$switchToWindow(dr$getCurrentWindowHandle()[[1]])
curwin<- dr$getCurrentWindowHandle()
dr$findElement('xpath', '//*[@id="n_search_input"]')$sendKeysToElement(list('건축법',key = 'enter'))
dr$getCurrentWindowHandle()
dr$closeWindow()
currWin <- dr$getCurrentWindowHandle()
dr$navigate("http://www.kyeonggi.com/")
dr$open()
dr$navigate("http://www.kyeonggi.com/")
currWin <- dr$getCurrentWindowHandle()
currWin
allWins <- unlist(dr$getWindowHandles())
allWins
otherWindow <- allWins[!allWins %in% currWin[[1]]]
dr$switchToWindow(otherWindow)
dr$closeWindow()
dr$findElement('xpath', '//*[@id="n_search_input"]')$sendKeysToElement(list('건축법',key = 'enter'))
dr$refresh
dr$refresh()
dr$open()
dr$navigate("http://www.kyeonggi.com/")
dr$findElement('xpath', '//*[@id="n_search_input"]')$sendKeysToElement(list('건축법',key = 'enter'))
dr$findElement('xpath', '//*[@id="n_search_input"]')$sendKeysToElement(list('건축법',key = 'enter'))
dr$findElement('xpath', '//*[@id="n_search_input"]')$sendKeysToElement(list('건축법',key = 'enter'))
dr$open()
dr$navigate("http://www.kyeonggi.com/")
dr$findElement('xpath', '//*[@id="n_search_input"]')$sendKeysToElement(list('건축법',key = 'enter'))
dr$findElement('xpath',paste0('//*[@id="content"]/div[2]/div[2]/div[2]/div[',as.character(2),']/ul/li[1]/a'))$sendKeysToElement(list(key = 'enter'))
currWin <- dr$getCurrentWindowHandle()
currWin
allWins <- unlist(dr$getWindowHandles())
allWins
otherWindow <- allWins[!allWins %in% currWin[[1]]]
dr$switchToWindow(otherWindow)
dr$switchToWindow(currWin[[1]])
dr$findElement('xpath',paste0('//*[@id="content"]/div[2]/div[2]/div[2]/div[',as.character(2),']/ul/li[1]/a'))$sendKeysToElement(list(key = 'enter'))
pg<- dr$getPageSource()
pg[[1]]
ps<- read_html(pg[[1]])
gisa<-html_nodes(ps, '#arl_view_content')
gisa
dr$switchToWindow(otherWindow)
dr$switchToWindow(currWin[[1]])
currWin <- dr$getCurrentWindowHandle()
currWin
dr$switchToWindow(currWin[[1]])
allWins <- unlist(dr$getWindowHandles())
allWins
View(lword)
